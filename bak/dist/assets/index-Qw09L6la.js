import"./modulepreload-polyfill-B5Qt9EMX.js";class ht{constructor(e){this.container=e,this.renderer=null,this.scene=null,this.camera=null,this.composer=null,this.bloomPass=null,this.afterimagePass=null,this.ambientLight=null,this.directionalLight=null,this.lightningLight=null,this.ground=null,this.groundMat=null,this.cloudGroup=null,this.cloud1=null,this.cloud2=null,this.cloudTex=null,this.isRaining=!1,this.isSnowing=!1,this.currentTime="day",this.particleCount=5e3,this.particleSpeed=10,this.lightBase=.6,this.rainMesh=null,this.RAIN_COUNT=0,this.BASE_SPEED=10,this.POS=null,this.VEL=null,this._M=null,this._Q=null,this._V=null,this._S=null,this.splashMesh=null,this.SPL_LIFE=null,this.SPL_POS=null,this.MAX_SPL=800,this.SPL_DT=.25,this.WIND_BASE=.8,this.WIND_GUST=.6,this.WIND_DIR=90,this.WIND_VEC=null,this.lightningTimer=0,this.lightningActive=!1,this.lightningBias=.015,this.PRESET={day:{fogCol:9356767,fogDen:.03,amb:.8,dir:1,dirCol:16777215,bgTop:8900331,bgBot:14743546,bloom:.45},night:{fogCol:727598,fogDen:.055,amb:.22,dir:.55,dirCol:8421631,bgTop:661807,bgBot:1122880,bloom:.75},cloudy:{fogCol:7181223,fogDen:.045,amb:.6,dir:.7,dirCol:15527921,bgTop:8366013,bgBot:11060435,bloom:.5}},this.init()}init(){this.setupRenderer(),this.setupScene(),this.setupLights(),this.setupGround(),this.initClouds(),this.setupPostProcessing(),this.initSplashPool(),this.setupEventListeners(),this.setupRain(),this.applyEnv("day"),this.animate()}setupRenderer(){this.renderer=new THREE.WebGLRenderer({antialias:!0,alpha:!0,powerPreference:"high-performance"}),this.renderer.setPixelRatio(Math.min(window.devicePixelRatio,2)),this.renderer.setSize(window.innerWidth,window.innerHeight),this.renderer.outputColorSpace=THREE.SRGBColorSpace,this.renderer.physicallyCorrectLights=!0,this.renderer.toneMapping=THREE.ACESFilmicToneMapping,this.renderer.toneMappingExposure=1,this.container.appendChild(this.renderer.domElement)}setupScene(){this.scene=new THREE.Scene,this.scene.fog=new THREE.FogExp2(9356767,.03),this.camera=new THREE.PerspectiveCamera(55,window.innerWidth/window.innerHeight,.1,220),this.camera.position.set(0,1.7,7),this.camera.lookAt(0,1.4,0)}setupLights(){this.ambientLight=new THREE.AmbientLight(16777215,this.lightBase),this.scene.add(this.ambientLight),this.directionalLight=new THREE.DirectionalLight(16777215,1),this.directionalLight.position.set(3,5,2),this.scene.add(this.directionalLight),this.lightningLight=new THREE.PointLight(16777215,0,50),this.lightningLight.position.set(0,8,-6),this.scene.add(this.lightningLight)}setupGround(){this.groundMat=new THREE.MeshStandardMaterial({color:10133670,roughness:.95,metalness:0}),this.ground=new THREE.Mesh(new THREE.PlaneGeometry(200,200),this.groundMat),this.ground.rotation.x=-Math.PI/2,this.ground.receiveShadow=!0,this.scene.add(this.ground)}setupPostProcessing(){this.composer=new EffectComposer(this.renderer),this.composer.addPass(new RenderPass(this.scene,this.camera)),this.bloomPass=new UnrealBloomPass(new THREE.Vector2(window.innerWidth,window.innerHeight),.55,.85,.85),this.composer.addPass(this.bloomPass),this.afterimagePass=new AfterimagePass,this.afterimagePass.uniforms.damp.value=.92,this.composer.addPass(this.afterimagePass)}setupEventListeners(){window.addEventListener("resize",()=>this.onResize())}onResize(){this.camera.aspect=window.innerWidth/window.innerHeight,this.camera.updateProjectionMatrix(),this.renderer.setSize(window.innerWidth,window.innerHeight),this.composer.setSize(window.innerWidth,window.innerHeight)}animate(){requestAnimationFrame(()=>this.animate());const e=performance.now(),n=Math.min(.05,(this.animate._last?e-this.animate._last:16)/1e3);this.animate._last=e,this.updateWind(n),this.updateLightning(n),this.updateRain(n),this.updateSnow(n),this.updateSplash(n),this.updateClouds(),this.composer.render()}updateWind(e){const n=this.noise1D(now*7e-4),t=this.WIND_BASE+n*this.WIND_GUST,r=THREE.MathUtils.degToRad((this.WIND_DIR+180)%360);this.WIND_VEC.set(Math.sin(r),0,Math.cos(r)).multiplyScalar(t)}updateLightning(e){this.lightningTimer-=e,this.lightningTimer<=0&&this.currentTime==="night"&&this.isRaining&&(Math.random()<this.lightningBias?(this.triggerLightning(),this.lightningTimer=3+Math.random()*5):this.lightningTimer=.5+Math.random()*1.5)}applyWeatherState(e){console.log("Applying weather state:",e)}dispose(){this.renderer&&this.renderer.dispose()}}var it={exports:{}};(function(R,e){(function(){var n=Math.PI,t=Math.sin,r=Math.cos,s=Math.tan,p=Math.asin,w=Math.atan2,x=Math.acos,c=n/180,C=1e3*60*60*24,A=2440588,H=2451545;function $(i){return i.valueOf()/C-.5+A}function T(i){return new Date((i+.5-A)*C)}function z(i){return $(i)-H}var U=c*23.4397;function Q(i,a){return w(t(i)*r(U)-s(a)*t(U),r(i))}function N(i,a){return p(t(a)*r(U)+r(a)*t(U)*t(i))}function G(i,a,o){return w(t(i),r(i)*t(a)-s(o)*r(a))}function j(i,a,o){return p(t(a)*t(o)+r(a)*r(o)*r(i))}function O(i,a){return c*(280.16+360.9856235*i)-a}function nt(i){return i<0&&(i=0),2967e-7/Math.tan(i+.00312536/(i+.08901179))}function V(i){return c*(357.5291+.98560028*i)}function K(i){var a=c*(1.9148*t(i)+.02*t(2*i)+3e-4*t(3*i)),o=c*102.9372;return i+a+o+n}function X(i){var a=V(i),o=K(a);return{dec:N(o,0),ra:Q(o,0)}}var y={};y.getPosition=function(i,a,o){var d=c*-o,h=c*a,l=z(i),u=X(l),m=O(l,d)-u.ra;return{azimuth:G(m,h,u.dec),altitude:j(m,h,u.dec)}};var k=y.times=[[-.833,"sunrise","sunset"],[-.3,"sunriseEnd","sunsetStart"],[-6,"dawn","dusk"],[-12,"nauticalDawn","nauticalDusk"],[-18,"nightEnd","night"],[6,"goldenHourEnd","goldenHour"]];y.addTime=function(i,a,o){k.push([i,a,o])};var Y=9e-4;function rt(i,a){return Math.round(i-Y-a/(2*n))}function Z(i,a,o){return Y+(i+a)/(2*n)+o}function tt(i,a,o){return H+i+.0053*t(a)-.0069*t(2*o)}function at(i,a,o){return x((t(i)-t(a)*t(o))/(r(a)*r(o)))}function ot(i){return-2.076*Math.sqrt(i)/60}function st(i,a,o,d,h,l,u){var m=at(i,o,d),g=Z(m,a,h);return tt(g,l,u)}y.getTimes=function(i,a,o,d){d=d||0;var h=c*-o,l=c*a,u=ot(d),m=z(i),g=rt(m,h),D=Z(0,h,g),_=V(D),M=K(_),b=N(M,0),P=tt(D,_,M),v,W,L,E,S,I,f={solarNoon:T(P),nadir:T(P-.5)};for(v=0,W=k.length;v<W;v+=1)L=k[v],E=(L[0]+u)*c,S=st(E,h,l,b,g,_,M),I=P-(S-P),f[L[1]]=T(I),f[L[2]]=T(S);return f};function et(i){var a=c*(218.316+13.176396*i),o=c*(134.963+13.064993*i),d=c*(93.272+13.22935*i),h=a+c*6.289*t(o),l=c*5.128*t(d),u=385001-20905*r(o);return{ra:Q(h,l),dec:N(h,l),dist:u}}y.getMoonPosition=function(i,a,o){var d=c*-o,h=c*a,l=z(i),u=et(l),m=O(l,d)-u.ra,g=j(m,h,u.dec),D=w(t(m),s(h)*r(u.dec)-t(u.dec)*r(m));return g=g+nt(g),{azimuth:G(m,h,u.dec),altitude:g,distance:u.dist,parallacticAngle:D}},y.getMoonIllumination=function(i){var a=z(i||new Date),o=X(a),d=et(a),h=149598e3,l=x(t(o.dec)*t(d.dec)+r(o.dec)*r(d.dec)*r(o.ra-d.ra)),u=w(h*t(l),d.dist-h*r(l)),m=w(r(o.dec)*t(o.ra-d.ra),t(o.dec)*r(d.dec)-r(o.dec)*t(d.dec)*r(o.ra-d.ra));return{fraction:(1+r(u))/2,phase:.5+.5*u*(m<0?-1:1)/Math.PI,angle:m}};function B(i,a){return new Date(i.valueOf()+a*C/24)}y.getMoonTimes=function(i,a,o,d){var h=new Date(i);d?h.setUTCHours(0,0,0,0):h.setHours(0,0,0,0);for(var l=.133*c,u=y.getMoonPosition(h,a,o).altitude-l,m,g,D,_,M,b,P,v,W,L,E,S,I,f=1;f<=24&&(m=y.getMoonPosition(B(h,f),a,o).altitude-l,g=y.getMoonPosition(B(h,f+1),a,o).altitude-l,M=(u+g)/2-m,b=(g-u)/2,P=-b/(2*M),v=(M*P+b)*P+m,W=b*b-4*M*m,L=0,W>=0&&(I=Math.sqrt(W)/(Math.abs(M)*2),E=P-I,S=P+I,Math.abs(E)<=1&&L++,Math.abs(S)<=1&&L++,E<-1&&(E=S)),L===1?u<0?D=f+E:_=f+E:L===2&&(D=f+(v<0?S:E),_=f+(v<0?E:S)),!(D&&_));f+=2)u=g;var F={};return D&&(F.rise=B(h,D)),_&&(F.set=B(h,_)),!D&&!_&&(F[v>0?"alwaysUp":"alwaysDown"]=!0),F},R.exports=y})()})(it);var q=it.exports;class ct{constructor(){this.cache=new Map,this.lastUpdate=0,this.cacheTimeout=6e4}getSunPosition(e,n,t=new Date){const r=Date.now(),s=`${e.toFixed(4)}_${n.toFixed(4)}_${Math.floor(t.getTime()/6e4)}`;if(this.cache.has(s)&&r-this.lastUpdate<this.cacheTimeout)return this.cache.get(s);const p=q.getPosition(t,e,n),w=p.altitude*180/Math.PI,x=p.azimuth*180/Math.PI,c=q.getTimes(t,e,n),C=c.sunrise.getTime(),A=c.sunset.getTime(),H=t.getTime(),$=H>=C&&H<=A,T={altitudeDeg:Math.round(w*100)/100,azimuthDeg:Math.round(x*100)/100,isDay:$,sunrise:C,sunset:A};return this.cache.set(s,T),this.lastUpdate=r,T}getSunInfo(e,n,t=new Date){const r=q.getTimes(t,e,n);return{...this.getSunPosition(e,n,t),times:{sunrise:r.sunrise,sunset:r.sunset,solarNoon:r.solarNoon,dawn:r.dawn,dusk:r.dusk}}}clearCache(){this.cache.clear(),this.lastUpdate=0}}const ut=new ct;class dt{constructor(){this.cache=new Map,this.lastUpdate=0,this.cacheTimeout=30*60*1e3,this.baseUrl="https://api.open-meteo.com/v1"}async getCurrentWeather(e,n){const t=`weather_${e.toFixed(4)}_${n.toFixed(4)}`,r=Date.now();if(this.cache.has(t)&&r-this.lastUpdate<this.cacheTimeout)return this.cache.get(t);try{const s=new URLSearchParams({latitude:e.toFixed(4),longitude:n.toFixed(4),current_weather:"true",hourly:"temperature_2m,relativehumidity_2m,apparent_temperature,precipitation_probability,precipitation,weathercode,cloudcover,visibility,windspeed_10m,winddirection_10m,uv_index",daily:"sunrise,sunset",timezone:"auto"}),p=await fetch(`${this.baseUrl}/forecast?${s}`),w=await p.json();if(!p.ok)throw new Error(`API Error: ${w.reason||"Unknown error"}`);const x=this.transformWeatherData(w);return this.cache.set(t,x),this.lastUpdate=r,x}catch(s){return console.error("Weather API Error:",s),this.cache.get(t)||this.getDefaultWeather()}}async getAirQuality(e,n){const t=`air_${e.toFixed(4)}_${n.toFixed(4)}`,r=Date.now(),s=60*60*1e3;if(this.cache.has(t)&&r-this.lastUpdate<s)return this.cache.get(t);try{const p=new URLSearchParams({latitude:e.toFixed(4),longitude:n.toFixed(4),hourly:"pm10,pm2_5,carbon_monoxide,nitrogen_dioxide,sulphur_dioxide,ozone,aqi",timezone:"auto"}),w=await fetch(`${this.baseUrl}/air-quality?${p}`),x=await w.json();if(!w.ok)throw new Error(`Air Quality API Error: ${x.reason||"Unknown error"}`);const c=this.transformAirQualityData(x);return this.cache.set(t,c),c}catch(p){return console.error("Air Quality API Error:",p),this.cache.get(t)||this.getDefaultAirQuality()}}async geocode(e){try{const n=new URLSearchParams({name:e,count:"1",language:"zh",format:"json"}),t=await fetch(`https://geocoding-api.open-meteo.com/v1/search?${n}`),r=await t.json();return!t.ok||!r.results?[]:r.results.map(s=>({name:s.name,lat:s.latitude,lon:s.longitude,country:s.country,admin1:s.admin1}))}catch(n){return console.error("Geocoding Error:",n),[]}}transformWeatherData(e){const n=e.current_weather,t=e.hourly,r=e.daily,s=new Date().getHours(),p={temperature:t.temperature_2m[s],humidity:t.relativehumidity_2m[s],apparentTemp:t.apparent_temperature[s],precipitationProb:t.precipitation_probability[s],precipitation:t.precipitation[s],cloudcover:t.cloudcover[s],visibility:t.visibility[s],windSpeed:t.windspeed_10m[s],windDirection:t.winddirection_10m[s],uvIndex:t.uv_index[s]};return{location:{lat:e.latitude,lon:e.longitude,timezone:e.timezone},current:{temperature:n.temperature,weatherCode:n.weathercode,windSpeed:n.windspeed_10m,windDirection:n.winddirection_10m,isDay:n.is_day===1},hourly:p,daily:{sunrise:r.sunrise[0],sunset:r.sunset[0]},timestamp:Date.now()}}transformAirQualityData(e){const n=e.hourly,t=new Date().getHours();return{pm10:n.pm10[t],pm2_5:n.pm2_5[t],carbon_monoxide:n.carbon_monoxide[t],nitrogen_dioxide:n.nitrogen_dioxide[t],sulphur_dioxide:n.sulphur_dioxide[t],ozone:n.ozone[t],aqi:n.aqi[t],timestamp:Date.now()}}mapWeatherCode(e){return{0:"clear",1:"clear",2:"cloudy",3:"cloudy",45:"fog",48:"fog",51:"rain",53:"rain",55:"rain",56:"rain",57:"rain",61:"rain",63:"rain",65:"rain",66:"snow",67:"snow",71:"snow",73:"snow",75:"snow",77:"snow",80:"rain",81:"rain",82:"rain",85:"snow",86:"snow",95:"thunderstorm",96:"thunderstorm",99:"thunderstorm"}[e]||"clear"}getDefaultWeather(){return{location:{lat:39.9042,lon:116.4074,timezone:"Asia/Shanghai"},current:{temperature:20,weatherCode:0,windSpeed:5,windDirection:180,isDay:!0},hourly:{temperature:20,humidity:60,apparentTemp:20,precipitationProb:0,precipitation:0,cloudcover:20,visibility:10,windSpeed:5,windDirection:180,uvIndex:5},daily:{sunrise:new Date().setHours(6,0,0,0),sunset:new Date().setHours(18,0,0,0)},timestamp:Date.now()}}getDefaultAirQuality(){return{pm10:50,pm2_5:25,carbon_monoxide:500,nitrogen_dioxide:40,sulphur_dioxide:20,ozone:100,aqi:50,timestamp:Date.now()}}clearCache(){this.cache.clear(),this.lastUpdate=0}}const J=new dt;class lt{constructor(){this.engine=null,this.currentWeather=null,this.currentLocation=null,this.init()}async init(){try{const e=document.getElementById("weather-container");this.engine=new ht(e),await this.getCurrentLocation(),await this.loadWeatherData(),document.getElementById("loading").style.display="none",document.getElementById("weather-info").style.display="block",this.setupMessageListener(),this.setupDataRefresh()}catch(e){console.error("初始化失败:",e),this.showError("初始化失败，请刷新页面重试")}}async getCurrentLocation(){return new Promise((e,n)=>{navigator.geolocation?navigator.geolocation.getCurrentPosition(t=>{this.currentLocation={lat:t.coords.latitude,lon:t.coords.longitude},e(this.currentLocation)},t=>{console.error("位置获取失败:",t),this.currentLocation={lat:39.9042,lon:116.4074},e(this.currentLocation)}):(this.currentLocation={lat:39.9042,lon:116.4074},e(this.currentLocation))})}async loadWeatherData(){if(this.currentLocation)try{const e=await J.getCurrentWeather(this.currentLocation.lat,this.currentLocation.lon),n=await J.getAirQuality(this.currentLocation.lat,this.currentLocation.lon),t=ut.getSunPosition(this.currentLocation.lat,this.currentLocation.lon);this.currentWeather={location:{...this.currentLocation,name:e.location.name||"当前位置",timezone:e.location.timezone},sun:{altitudeDeg:t.altitudeDeg,azimuthDeg:t.azimuthDeg},weather:{code:J.mapWeatherCode(e.current.weatherCode),precipIntensity:e.hourly.precipitation/10,precipType:e.current.temperature<0?"snow":"rain",visibilityKm:e.hourly.visibility,windSpeedMps:e.current.windSpeed,windDirDeg:e.current.windDirection,thunderProb:e.current.weatherCode>=95?.6:0},air:{aqi:n.aqi,pm25:n.pm2_5,pm10:n.pm10},env:{isNight:!t.isDay,temperature:e.current.temperature}},this.updateUI(),this.engine&&this.engine.applyWeatherState&&this.engine.applyWeatherState(this.currentWeather)}catch(e){console.error("天气数据加载失败:",e),this.showError("天气数据加载失败")}}updateUI(){if(!this.currentWeather)return;const e=Math.round(this.currentWeather.env.temperature),n=this.currentWeather.location.name,t=this.currentWeather.weather.code,r={clear:"晴朗",cloudy:"多云",rain:"下雨",snow:"下雪",fog:"有雾",thunderstorm:"雷暴"};document.getElementById("weather-location").textContent=n,document.getElementById("weather-temperature").textContent=`${e}°`,document.getElementById("weather-location-detail").textContent=`${this.currentLocation.lat.toFixed(2)}, ${this.currentLocation.lon.toFixed(2)}`,document.getElementById("weather-description").textContent=r[t]||"未知"}setupMessageListener(){chrome.runtime&&chrome.runtime.onMessage.addListener((e,n,t)=>{e.type==="weather.update"&&this.loadWeatherData()})}setupDataRefresh(){setInterval(()=>{this.loadWeatherData()},30*60*1e3)}showError(e){document.getElementById("loading").innerHTML=e,document.getElementById("loading").style.display="block"}}new lt;
